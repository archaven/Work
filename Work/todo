const express = require('express');
const app = express();
const port = 3000;

app.use(express.json());

let todos = [];
let idCounter = 1;

// Create a new to-do item
app.post('/todos', (req, res) => {
    const { title, description } = req.body;
    const newTodo = { id: idCounter++, title, description, completed: false };
    todos.push(newTodo);
    res.status(201).json(newTodo);
});

// Get all to-do items
app.get('/todos', (req, res) => {
    res.json(todos);
});

// Get a single to-do item by id
app.get('/todos/:id', (req, res) => {
    const todo = todos.find(t => t.id === parseInt(req.params.id));
    if (!todo) {
        return res.status(404).json({ message: 'To-do item not found' });
    }
    res.json(todo);
});

// Update a to-do item by id
app.put('/todos/:id', (req, res) => {
    const { title, description, completed } = req.body;
    const todo = todos.find(t => t.id === parseInt(req.params.id));
    if (!todo) {
        return res.status(404).json({ message: 'To-do item not found' });
    }
    todo.title = title !== undefined ? title : todo.title;
    todo.description = description !== undefined ? description : todo.description;
    todo.completed = completed !== undefined ? completed : todo.completed;
    res.json(todo);
});

// Delete a to-do item by id
app.delete('/todos/:id', (req, res) => {
    const todoIndex = todos.findIndex(t => t.id === parseInt(req.params.id));
    if (todoIndex === -1) {
        return res.status(404).json({ message: 'To-do item not found' });
    }
    const deletedTodo = todos.splice(todoIndex, 1);
    res.json(deletedTodo);
});

app.listen(port, () => {
    console.log(`To-do API is running on http://localhost:${port}`);
});